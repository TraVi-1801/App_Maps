package com.vic.project.app_maps.utilsimport android.app.Activityimport android.content.Contextimport android.content.IntentSenderimport com.google.android.gms.common.api.ResolvableApiExceptionimport com.google.android.gms.location.LocationRequestimport com.google.android.gms.location.LocationServicesimport com.google.android.gms.location.LocationSettingsRequestimport com.google.android.gms.location.Priorityobject GPSHelper {    fun Context.requestGpsEnable(        intervalMillis: Long = 10000,        priority: Int = Priority.PRIORITY_HIGH_ACCURACY,        onGpsEnabled: () -> Unit,        onResolvableException: (IntentSender) -> Unit,        onGpsDisabled: ((Exception) -> Unit)? = null    ) {        val settingsClient = LocationServices.getSettingsClient(this as Activity)        val locationRequest = LocationRequest.Builder(priority, intervalMillis).build()        val settingsRequest = LocationSettingsRequest.Builder()            .addLocationRequest(locationRequest)            .setAlwaysShow(true)            .build()        settingsClient.checkLocationSettings(settingsRequest)            .addOnSuccessListener { onGpsEnabled() }            .addOnFailureListener { exception ->                handleGpsFailure(exception, onResolvableException, onGpsDisabled)            }    }    private fun handleGpsFailure(        exception: Exception,        onResolvableException: (IntentSender) -> Unit,        onGpsDisabled: ((Exception) -> Unit)?    ) {        if (exception is ResolvableApiException) {            try {                onResolvableException(exception.resolution.intentSender)            } catch (sendEx: IntentSender.SendIntentException) {                onGpsDisabled?.invoke(sendEx)            }        } else {            onGpsDisabled?.invoke(exception)        }    }}