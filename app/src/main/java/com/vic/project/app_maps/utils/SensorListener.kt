package com.vic.project.app_maps.utilsimport android.content.Contextimport android.hardware.Sensorimport android.hardware.SensorEventimport android.hardware.SensorEventListenerimport android.hardware.SensorManagerclass OrientationSensorHelper(    context: Context,    private val onAzimuthChanged: (Float) -> Unit) : SensorEventListener {    private val sensorManager = context.getSystemService(Context.SENSOR_SERVICE) as SensorManager    private val accelerometer = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER)    private val magnetometer = sensorManager.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD)    private val gravity = FloatArray(3)    private val geomagnetic = FloatArray(3)    fun start() {        sensorManager.registerListener(this, accelerometer, SensorManager.SENSOR_DELAY_UI)        sensorManager.registerListener(this, magnetometer, SensorManager.SENSOR_DELAY_UI)    }    fun stop() {        sensorManager.unregisterListener(this)    }    override fun onSensorChanged(event: SensorEvent) {        when (event.sensor.type) {            Sensor.TYPE_ACCELEROMETER -> System.arraycopy(event.values, 0, gravity, 0, 3)            Sensor.TYPE_MAGNETIC_FIELD -> System.arraycopy(event.values, 0, geomagnetic, 0, 3)        }        val R = FloatArray(9)        val I = FloatArray(9)        if (SensorManager.getRotationMatrix(R, I, gravity, geomagnetic)) {            val orientation = FloatArray(3)            SensorManager.getOrientation(R, orientation)            val azimuth = Math.toDegrees(orientation[0].toDouble()).toFloat()            onAzimuthChanged((azimuth + 360) % 360) // normalize từ 0 đến 360 độ        }    }    override fun onAccuracyChanged(sensor: Sensor?, accuracy: Int) {}}